version: '3.9'

services:
  backend:
    build: ./backend
    restart: on-failure
    ports:
      - "3000:3000"
    env_file:
      - .env
    networks:
      - default
      - media-netz

  homepage:
    build: ./homepage
    restart: on-failure
    ports:
      - "3001:3000"
    networks:
      - default

  # Zimmer Service - erweitert mit MariaDB
  zimmer:
    build: ./zimmer
    restart: on-failure
    ports:
      - "3002:3000"
    depends_on:
      - zimmer-mysql
    env_file:
      - .env
    networks:
      - default

  # MariaDB für Zimmer
  zimmer-mysql:
    image: mariadb:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ubhotel_zimmer
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - zimmer-mysql-data:/var/lib/mysql
      - ./zimmer/db-init:/docker-entrypoint-initdb.d
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - default

  # phpMyAdmin für Zimmer-DB
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      PMA_HOST: zimmer-mysql
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "8080:80"
    depends_on:
      - zimmer-mysql
    networks:
      - default

  # Events Service mit eigener DB
  events:
    build: ./events
    restart: on-failure
    ports:
      - "3003:3000"
    depends_on:
      - events-mysql
    env_file:
      - .env
    environment:
      - DB_HOST=events-mysql
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=ubhotel_events
      - MINIO_URL=http://media-minio:9000
      - MINIO_BUCKET=events-images
    networks:
      - default
      - media-netz

  # MariaDB für Events
  events-mysql:
    image: mariadb:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ubhotel_events
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3307:3306"
    volumes:
      - events-mysql-data:/var/lib/mysql
      - ./events/db-init:/docker-entrypoint-initdb.d
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - default

  # phpMyAdmin für Events-DB
  phpmyadmin-events:
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      PMA_HOST: events-mysql
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "8081:80"
    depends_on:
      - events-mysql
    networks:
      - default

  buchung:
    build: ./buchung
    restart: on-failure
    ports:
      - "3004:3000"
    depends_on:
      buchung-mysql:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DB_HOST=buchung-mysql
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=ubhotel_buchung
    networks:
      - default

  # MariaDB für Buchung
  buchung-mysql:
    image: mariadb:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ubhotel_buchung
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3308:3306"
    volumes:
      - buchung-mysql-data:/var/lib/mysql
      - ./buchung/db-init:/docker-entrypoint-initdb.d
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default

  # phpMyAdmin für Buchung-DB
  phpmyadmin-buchung:
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      PMA_HOST: buchung-mysql
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "8082:80"
    depends_on:
      buchung-mysql:
        condition: service_healthy
    networks:
      - default

  media:
    build: ./media
    restart: on-failure
    ports:
      - "3005:3000"
    env_file:
      - .env
    networks:
      - default
      - media-netz

  media-minio:
    image: minio/minio
    ports:
      - "9100:9000"
      - "9101:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./media/minio-data:/data
    networks:
      - media-netz

  wetter:
    build: ./wetter
    restart: on-failure
    ports:
      - "3006:3000"
    env_file:
      - .env
    networks:
      - default

  wetter-generator:
    build:
      context: ./wetter
      dockerfile: Dockerfile.generator
    restart: on-failure
    depends_on:
      - redis
    networks:
      - default

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    networks:
      - default

  nginx:
    image: nginx:latest
    restart: on-failure
    ports:
      - "80:80"
    depends_on:
      - backend
      - homepage
      - zimmer
      - events
      - media
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - default
      - media-netz

volumes:
  zimmer-mysql-data:
  events-mysql-data:
  buchung-mysql-data:

networks:
  default:
    driver: bridge
  media-netz:
    driver: bridge